- name: this playbbok is to configure shipping component
  hosts: shipping
  become: yes

  tasks:
    - name: maven installation
      ansible.builtin.yum:
        name: maven
        state: installed

    - name: check if roboshop user is present or not
      ansible.builtin.command: id roboshop
      register: out
      ignore_errors: true
    
    - name: print the output of roboshop user
      ansible.builtin.debug:
        msg: "{{out}}"
    
    - name: print the exit status of roboshop user
      ansible.builtin.debug:
        msg: "{{out.rc}}"

    - name: creating roboshop user
      ansible.builtin.user:
        user: roboshop
      when: out.rc != 0

    - name: checking if /app directory present or not
      ansible.builtin.stat:
        path: /app
      register: directory

    - name: print the output of diretory
      ansible.builtin.debug:
        msg: "{{directory}}"

    - name: print the exit status of diretory
      ansible.builtin.debug:
        msg: "{{directory.stat.exists}}"
    
    - name: creating /app directory
      ansible.builtin.file:
        path: /app
        state: directory
      when: directory.stat.exists == false

    - name: download the code to /app directory
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
        dest: /tmp

    - name: extract the zip file
      ansible.builtin.unarchive:
        src: /tmp/shipping.zip
        dest: /app
        remote_src: yes

    - name: downloading application dependencies
      ansible.builtin.command: mvn clean package
      args:
        chdir: /app
      
    - name: creating a jar file
      ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
      args:
        chdir: /app

    - name: copy the shpping service repo file
      ansible.builtin.copy:
        src: shipping.service
        dest: /etc/systemd/system

