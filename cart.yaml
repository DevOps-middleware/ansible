- name: this playbook is to install cart component
  hosts: cart
  become: yes
  
  tasks:
    - name: setup nodejs reop
      ansible.builtin.shell: curl -sL https://rpm.nodesource.com/setup_lts.x | bash
    
    - name: installing nodejs 
      ansible.builtin.yum:
        name: nodejs
        state: installed
    
    - name: check if roboshop user exists or not
      ansible.builtin.command: id roboshop
      register: out
      ignore_errors: true
    
    - name: print the output of user exists or not
      ansible.builtin.debug:
        msg: "{{out}}"
      
    - name: print the output of user exist status
      ansible.builtin.debug:
        msg: "{{out.rc}}"
    
    - name: creating the roboshop user
      ansible.builtin.user:
        name: roboshop
      when: out.rc != 0

    - name: check /app directory is present or not
      ansible.builtin.stat: 
        path: /app
      register: directory

    - name: print the output of /app directory
      ansible.builtin.debug:
        msg: "{{directory}}"
    
    - name: print the exist status of /app directory
      ansible.builtin.debug:
        msg: "{{directory.stat.exists}}"
    
    - name: creating /app directory
      ansible.builtin.file:
        path: /app
        state: directory
      when: directory.stat.exists == false

    - name: copy the car app
      ansible.builtin.get_url: 
        url: curl -L -o /tmp/cart.zip https://roboshop-builds.s3.amazonaws.com/cart.zip
        dest: /tmp
    
    - name: extract the cart.zip file
      ansible.builtin.unarchive:
        src: /tmp/cart.zip
        dest : /app

    - name: install nodejs dependencies
      ansible.builtin.command: npm install
      args:
       chdir: /app

    - name: Setup SystemD Cart Service
      ansible.builtin.copy: 
        src: cart.service
        dest: /etc/systemd/system
    
    - name: reload the daemon service
      ansible.builtin.systemd:
        daemon_reload: true


